{"version":3,"sources":["Card/Card.js","Movies/Movies.js","SingleMovie/MovieInfo.js","APIcalls.js","SingleMovie/SingleMovie.js","App/App.js","index.js"],"names":["Card","moviePoster","movieRating","movieTitle","className","src","alt","Movies","movieCards","movies","map","movie","to","id","poster_path","parseFloat","average_rating","toFixed","title","dayjs","require","MovieInfo","this","background","backdrop_path","poster","overview","tagline","releaseDate","formatReleaseDate","release_date","runTime","runtime","genres","formatGenres","rating","budget","formatCost","revenue","checkCosts","format","join","cost","Intl","NumberFormat","style","currency","maximumFractionDigits","fetchData","dataSet","fetch","then","response","checkError","catch","error","console","log","res","ok","json","Error","SingleMovie","props","state","singleMovie","movieID","setState","backgroundImage","singleMovietitle","Component","App","exact","path","render","match","parseInt","params","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0658ef6a.chunk.js","sourcesContent":["import './Card.css'\n\nconst Card = ({moviePoster, movieRating, movieTitle }) => {\n  return (\n    <div className=\"card-container\">\n      <div className=\"top-card\">\n        <img src={moviePoster} className=\"movie-poster\" alt={movieTitle + ' poster'}></img>\n      </div>\n      <div className=\"bottom-card\">\n        <h2 className=\"poster-text\">{movieTitle}</h2>\n        <h3 className=\"poster-text\">Rating: {movieRating}</h3>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default Card","import React from 'react'\nimport Card from '../Card/Card'\nimport '../Movies/Movies.css'\nimport { Link } from 'react-router-dom'\n\nconst Movies = ({ movies }) => {\n  const movieCards = movies.movies.map(movie => {\n    return (\n      <Link to={`/${movie.id}`} key={movie.id}>\n        <Card\n          moviePoster={movie.poster_path}\n          movieRating={parseFloat(movie.average_rating).toFixed(2)}\n          movieTitle={movie.title}\n          key={movie.id}\n          />\n      </Link>\n    )\n  })\n\n\n\n  return (\n    <div className='movies-container'>\n      {movieCards}\n    </div>\n  )\n}\n\nexport default Movies\n","var dayjs = require('dayjs')\n\nclass MovieInfo {\n  constructor (movie) {\n    this.movie = movie\n    this.background = movie.backdrop_path\n    this.title = movie.title\n    this.poster = movie.poster_path\n    this.overview = movie.overview\n    this.tagline = movie.tagline\n    this.releaseDate = `Release Date: ${this.formatReleaseDate(movie.release_date)}`\n    this.runTime = `Run Time: ${movie.runtime} minutes`\n    this.genres = `Genres: ${this.formatGenres(movie.genres)}`\n    this.rating = `Average Rating: ${parseFloat(movie.average_rating).toFixed(2)}`\n    this.budget = `Budget: ${this.formatCost(movie.budget)}`\n    this.revenue = `Revenue: ${this.formatCost(movie.revenue)}`\n    this.checkCosts()\n  }\n\n  formatReleaseDate(releaseDate) {\n    let date = dayjs(releaseDate)\n    return date.format(\"MMMM D YYYY\")\n  }\n\n  formatGenres(genres) {\n    return genres.join(', ')\n  }\n\n  formatCost(cost) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0\n    }).format(cost)\n  }\n\n  checkCosts() {\n    if (this.movie.budget === 0) {\n      this.budget = ''\n    }\n    if (this.movie.revenue === 0) {\n      this.revenue = ''\n    }\n  }\n\n}\n\nexport default MovieInfo","export const fetchData = (dataSet) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/${dataSet}`)\n  .then(response => checkError(response))\n  .catch(error => console.log(error))\n}\n\nconst checkError = (res) => {\n  if (!res.ok) {\n    throw new Error(\n      \"Sorry...Internet Server Error\"\n    )\n  } else {\n      return res.json()\n  }\n}\n","import React, { Component } from 'react'\nimport MovieInfo from './MovieInfo'\nimport { fetchData } from '../APIcalls'\nimport { Link } from 'react-router-dom'\nimport './SingleMovie.css'\n\nclass SingleMovie extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      singleMovie: null\n    }\n  }\n\n  componentDidMount() {\n    fetchData(`movies/${this.props.movieID}`)\n      .then(movie => this.setState({ singleMovie: new MovieInfo(movie.movie)}))\n      .catch(error => this.setState({ error: error}))\n  }\n\n  render() {\n    return (\n      <>\n      {this.state.error && <h2 className=\"error\">{'Sorry...Server Error 🤷‍♂️'} </h2>}\n      {this.state.singleMovie !== null && \n      <div className=\"single-movie-container\"\n      style={{ backgroundImage: `url(${this.state.singleMovie.background}), url(https://www.solidbackgrounds.com/images/1920x1080/1920x1080-black-solid-color-background.jpg)` }}>\n        <div className=\"movie-information\">\n          <div className=\"left-side\">\n            <h2>{this.state.singleMovietitle}</h2>\n            <img className= \"movie-info-poster\" src={this.state.singleMovie.poster} alt=\"movie poster\"></img>\n            <Link to={'/'} className='back-btn'>GO BACK</Link>\n          </div>\n          <div className=\"right-side\">\n            <h4 className=\"movie-overview\">{this.state.singleMovie.overview}</h4>\n            <h5>{this.state.singleMovie.tagline}</h5>\n            <p>{this.state.singleMovie.releaseDate}</p>\n            <p>{this.state.singleMovie.genres}</p>\n            <p>{this.state.singleMovie.runTime}</p>\n            <p>{this.state.singleMovie.rating}</p>\n            <p>{this.state.singleMovie.budget}</p>\n            <p>{this.state.singleMovie.revenue}</p>\n          </div>\n        </div>\n      </div>\n      }\n      </>\n    ) \n  }\n}\n\nexport default SingleMovie\n","import React, { Component } from 'react'\nimport Movies from '../Movies/Movies'\nimport SingleMovie from '../SingleMovie/SingleMovie'\nimport { fetchData } from '../APIcalls'\nimport { Route } from 'react-router-dom'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      movies: null\n    }\n  }\n\n  componentDidMount() {\n     fetchData(`movies`)\n    .then(movies => this.setState({ movies }))\n    .catch(error => this.setState({ error: error}))\n  }\n\n  render() {\n    return(\n      <main>\n        <h1>🍅 🤢 Rancid Tomatillos 🎥</h1>\n\n        {this.state.error && <h2>Sorry...Server Error 🤷‍♂️</h2>}\n\n        {this.state.movies &&\n          <Route exact path=\"/\" render={() =>\n            <Movies movies={this.state.movies}/>}\n          />}\n\n          <Route exact path=\"/:id\" render={({ match }) => {\n            return <SingleMovie movieID={parseInt(match.params.id)}/>} } />\n\n\n        <div className=\"footer\">\n          <h4>Turing School of Software Design - Module 3 Paired Project. All rights not reserved 2021</h4>\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport { BrowserRouter } from 'react-router-dom'\n\nconst router = <BrowserRouter> <App /> </BrowserRouter>\n\n\nReactDOM.render(router, document.getElementById('root'));\n"],"sourceRoot":""}